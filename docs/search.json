[
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "STA 9750 Mini-Project #01 — Netflix Top 10",
    "section": "",
    "text": "Code\n# =========================\n# Setup & Data \n# =========================\n\n# Packages\nif (!require(\"tidyverse\")) install.packages(\"tidyverse\", quiet = TRUE)\nif (!require(\"DT\"))        install.packages(\"DT\", quiet = TRUE)\nif (!require(\"lubridate\")) install.packages(\"lubridate\", quiet = TRUE)\nif (!require(\"scales\"))    install.packages(\"scales\", quiet = TRUE)\n\nlibrary(readr);     library(dplyr);     library(stringr)\nlibrary(tidyr);     library(lubridate); library(ggplot2)\nlibrary(DT);        library(scales)\n\n# Data folder and file paths\nif (!dir.exists(file.path(\"data\", \"mp01\"))) {\n  dir.create(file.path(\"data\", \"mp01\"), showWarnings = FALSE, recursive = TRUE)\n}\nGLOBAL_TOP_10_FILENAME  &lt;- file.path(\"data\", \"mp01\", \"global_top10_alltime.tsv\")\nCOUNTRY_TOP_10_FILENAME &lt;- file.path(\"data\", \"mp01\", \"country_top10_alltime.tsv\")\n\n# Download if missing\nif (!file.exists(GLOBAL_TOP_10_FILENAME)) {\n  download.file(\n    \"https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv\",\n    destfile = GLOBAL_TOP_10_FILENAME, mode = \"wb\"\n  )\n}\nif (!file.exists(COUNTRY_TOP_10_FILENAME)) {\n  download.file(\n    \"https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv\",\n    destfile = COUNTRY_TOP_10_FILENAME, mode = \"wb\"\n  )\n}\n\n# Import\nGLOBAL_TOP_10  &lt;- read_tsv(GLOBAL_TOP_10_FILENAME, show_col_types = FALSE)\nCOUNTRY_TOP_10 &lt;- read_tsv(COUNTRY_TOP_10_FILENAME, na = \"N/A\", show_col_types = FALSE)\n\n# Clean\nGLOBAL_TOP_10 &lt;- GLOBAL_TOP_10 |&gt;\n  mutate(season_title = if_else(season_title == \"N/A\", NA_character_, season_title))\n\n# Helper to prettify column titles for tables\nformat_titles &lt;- function(df){\n  colnames(df) &lt;- colnames(df) |&gt; str_replace_all(\"_\", \" \") |&gt; str_to_title()\n  df\n}\n\n# Quick preview (datatable)\nGLOBAL_TOP_10 |&gt;\n  head(20) |&gt;\n  format_titles() |&gt;\n  datatable(options = list(searching = FALSE, info = FALSE)) |&gt;\n  formatRound(c(\"Weekly Hours Viewed\",\"Weekly Views\"))\n\n\n\n\n\n\nCode\n# =========================\n# Task 4: Exploratory Data Analysis \n# =========================\n\n# Q1. How many countries (by viewing history proxy)?\ncat(\"\\n# Q1. Number of countries:\\n\")\n\n\n\n# Q1. Number of countries:\n\n\nCode\nq1_count &lt;- n_distinct(COUNTRY_TOP_10$country_name)\nprint(q1_count)\n\n\n[1] 94\n\n\nCode\n# Q2. Non-English film with the most cumulative weeks in global Top 10\ncat(\"\\n# Q2. Non-English film with most cumulative weeks in global Top 10:\\n\")\n\n\n\n# Q2. Non-English film with most cumulative weeks in global Top 10:\n\n\nCode\nq2_tbl &lt;- GLOBAL_TOP_10 |&gt;\n  filter(category == \"Films (Non-English)\") |&gt;\n  arrange(desc(cumulative_weeks_in_top_10)) |&gt;\n  slice(1) |&gt;\n  select(show_title, cumulative_weeks_in_top_10) |&gt;\n  format_titles()\ndatatable(q2_tbl, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\n# Q3. Longest film (minutes) to appear in the global Top 10\ncat(\"\\n# Q3. Longest film (minutes) in global Top 10:\\n\")\n\n\n\n# Q3. Longest film (minutes) in global Top 10:\n\n\nCode\nq3_tbl &lt;- GLOBAL_TOP_10 |&gt;\n  mutate(runtime_minutes = round(60 * runtime)) |&gt;\n  arrange(desc(runtime_minutes)) |&gt;\n  slice(1) |&gt;\n  select(show_title, runtime_minutes) |&gt;\n  format_titles()\ndatatable(q3_tbl, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\n# Q4. Per category: program with most total global hours\ncat(\"\\n# Q4. Per category: program with most total global hours:\\n\")\n\n\n\n# Q4. Per category: program with most total global hours:\n\n\nCode\nq4_tbl &lt;- GLOBAL_TOP_10 |&gt;\n  group_by(category, show_title) |&gt;\n  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = \"drop\") |&gt;\n  slice_max(order_by = total_hours, n = 1, by = category) |&gt;\n  arrange(category) |&gt;\n  format_titles()\ndatatable(q4_tbl, options = list(searching = FALSE, info = FALSE)) |&gt;\n  formatRound(\"Total Hours\")\n\n\n\n\n\n\nCode\n# Q5. TV show with the longest consecutive Top-10 run in one country\ncat(\"\\n# Q5. Longest consecutive Top-10 TV run in one country:\\n\")\n\n\n\n# Q5. Longest consecutive Top-10 TV run in one country:\n\n\nCode\nlongest_streak &lt;- COUNTRY_TOP_10 |&gt;\n  filter(grepl(\"^TV\", category)) |&gt;\n  arrange(country_name, show_title, week) |&gt;\n  group_by(country_name, show_title) |&gt;\n  mutate(\n    is_consec = week - lag(week) == 7,\n    is_consec = replace_na(is_consec, FALSE),\n    streak_id = cumsum(!is_consec)\n  ) |&gt;\n  group_by(country_name, show_title, streak_id) |&gt;\n  summarise(\n    streak_weeks = n(),\n    start_week = min(week),\n    end_week = max(week),\n    .groups = \"drop\"\n  ) |&gt;\n  arrange(desc(streak_weeks)) |&gt;\n  slice(1) |&gt;\n  format_titles()\ndatatable(longest_streak, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\n# Q6. The one country with &lt; 200 weeks of history and its last recorded week\ncat(\"\\n# Q6. Country with &lt; 200 weeks of history and its last recorded week:\\n\")\n\n\n\n# Q6. Country with &lt; 200 weeks of history and its last recorded week:\n\n\nCode\nweeks_by_country &lt;- COUNTRY_TOP_10 |&gt;\n  summarise(n_weeks = n_distinct(week), .by = country_name) |&gt;\n  arrange(n_weeks)\nexception_country &lt;- weeks_by_country |&gt; slice(1) |&gt; pull(country_name)\nlast_week_exception &lt;- COUNTRY_TOP_10 |&gt;\n  filter(country_name == exception_country) |&gt;\n  summarise(last_week = max(week)) |&gt;\n  pull(last_week)\nq6_tbl &lt;- tibble(\n  country = exception_country,\n  n_weeks = weeks_by_country$n_weeks[1],\n  last_week = last_week_exception\n) |&gt; format_titles()\ndatatable(q6_tbl, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\n# Q7. Total hours watched for Squid Game (all seasons)\ncat(\"\\n# Q7. Total hours watched for Squid Game (all seasons):\\n\")\n\n\n\n# Q7. Total hours watched for Squid Game (all seasons):\n\n\nCode\nq7_hours &lt;- GLOBAL_TOP_10 |&gt;\n  filter(str_detect(show_title, regex(\"^Squid Game\", ignore_case = TRUE))) |&gt;\n  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) |&gt;\n  pull(total_hours)\ncat(comma(q7_hours), \"\\n\")\n\n\n5,310,000,000 \n\n\nCode\n# Q8. Estimated 2021 views for Red Notice (runtime 1h58m)\ncat(\"\\n# Q8. Estimated 2021 views for Red Notice (runtime 1h58m):\\n\")\n\n\n\n# Q8. Estimated 2021 views for Red Notice (runtime 1h58m):\n\n\nCode\nred_2021_hours &lt;- GLOBAL_TOP_10 |&gt;\n  filter(show_title == \"Red Notice\", year(week) == 2021) |&gt;\n  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) |&gt;\n  pull(total_hours)\nred_runtime_hours &lt;- 1 + 58/60\nred_2021_views  &lt;- red_2021_hours / red_runtime_hours\nq8_tbl &lt;- tibble(\n  `2021_hours` = comma(red_2021_hours),\n  `est_views`  = comma(round(red_2021_views))\n) |&gt; format_titles()\ndatatable(q8_tbl, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\n# Q9. Films that hit #1 in the U.S. but didn’t debut at #1; most-recent example\ncat(\"\\n# Q9. Films that climbed to #1 in U.S.; most-recent example:\\n\")\n\n\n\n# Q9. Films that climbed to #1 in U.S.; most-recent example:\n\n\nCode\nus_films &lt;- COUNTRY_TOP_10 |&gt;\n  filter(country_name == \"United States\", grepl(\"^Films\", category)) |&gt;\n  arrange(show_title, week)\nus_stats &lt;- us_films |&gt;\n  group_by(show_title) |&gt;\n  summarise(\n    debut_week    = min(week),\n    debut_rank    = weekly_rank[which.min(week)],\n    ever_no1      = any(weekly_rank == 1),\n    last_no1_week = if (any(weekly_rank == 1)) max(week[weekly_rank == 1]) else as.Date(NA),\n    .groups = \"drop\"\n  )\ncount_upgraders &lt;- sum(us_stats$ever_no1 & us_stats$debut_rank &gt; 1, na.rm = TRUE)\nq9_count_tbl &lt;- tibble(`Films that climbed to #1` = count_upgraders) |&gt; format_titles()\ndatatable(q9_count_tbl, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\nmost_recent_upgrader &lt;- us_stats |&gt;\n  filter(ever_no1, debut_rank &gt; 1) |&gt;\n  arrange(desc(last_no1_week)) |&gt;\n  slice(1) |&gt;\n  select(show_title, debut_rank, last_no1_week) |&gt;\n  format_titles()\ndatatable(most_recent_upgrader, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\n# Q10. TV show/season that hit Top-10 in the most countries on debut week\ncat(\"\\n# Q10. TV show/season with widest country coverage on debut week:\\n\")\n\n\n\n# Q10. TV show/season with widest country coverage on debut week:\n\n\nCode\ntv_debuts &lt;- COUNTRY_TOP_10 |&gt;\n  filter(grepl(\"^TV\", category)) |&gt;\n  group_by(show_title, season_title) |&gt;\n  summarise(debut_week = min(week), .groups = \"drop\")\ntv_coverage &lt;- COUNTRY_TOP_10 |&gt;\n  inner_join(tv_debuts, by = c(\"show_title\",\"season_title\")) |&gt;\n  filter(week == debut_week) |&gt;\n  group_by(show_title, season_title, debut_week) |&gt;\n  summarise(countries = n_distinct(country_name), .groups = \"drop\") |&gt;\n  arrange(desc(countries)) |&gt;\n  slice(1) |&gt;\n  format_titles()\ndatatable(tv_coverage, options = list(searching = FALSE, info = FALSE))\n\n\n\n\n\n\nCode\n# =========================\n# Extra Credit + Press Releases \n# =========================\n\n# Extra Credit: Chart\ncat(\"\\n# Extra Credit: Chart (Top 10 Global Films by Total Hours last full year)\\n\")\n\n\n\n# Extra Credit: Chart (Top 10 Global Films by Total Hours last full year)\n\n\nCode\nmost_recent_full_year &lt;- max(year(GLOBAL_TOP_10$week), na.rm = TRUE) - 1\ntop10_films_recent_year &lt;- GLOBAL_TOP_10 |&gt;\n  filter(grepl(\"^Films\", category), year(week) == most_recent_full_year) |&gt;\n  group_by(show_title) |&gt;\n  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = \"drop\") |&gt;\n  slice_max(total_hours, n = 10) |&gt;\n  arrange(total_hours)\nprint(\n  ggplot(top10_films_recent_year, aes(x = total_hours, y = reorder(show_title, total_hours))) +\n    geom_col() +\n    labs(\n      title = paste0(\"Top 10 Global Films by Total Hours (\", most_recent_full_year, \")\"),\n      x = \"Total Hours Viewed\", y = NULL\n    )\n)\n\n\n\n\n\n\n\n\n\nCode\n# Press Release 1: Stranger Things\ncat(\"\\n# Press Release 1: Stranger Things\\n\")\n\n\n\n# Press Release 1: Stranger Things\n\n\nCode\nst_stats &lt;- GLOBAL_TOP_10 |&gt;\n  filter(grepl(\"^TV\", category), str_detect(show_title, \"^Stranger Things\")) |&gt;\n  summarise(\n    total_hours = sum(weekly_hours_viewed, na.rm = TRUE),\n    total_weeks  = n(), .groups = \"drop\"\n  )\nst_total_hours &lt;- st_stats$total_hours\nst_total_weeks &lt;- st_stats$total_weeks\ncat(\n  \"Stranger Things, for four seasons, have\", comma(st_total_hours),\n  \"total hours viewed. Globally, Stranger Things held a top 10 position for\",\n  st_total_weeks, \"weeks. Stranger Things is one of the top English TV hits in both total hours and run length.\\n\"\n)\n\n\nStranger Things, for four seasons, have 2,967,980,000 total hours viewed. Globally, Stranger Things held a top 10 position for 50 weeks. Stranger Things is one of the top English TV hits in both total hours and run length.\n\n\nCode\n# Press Release 2: India-focused titles (weeks, not hours)\ncat(\"\\n# Press Release 2: India-focused titles\\n\")\n\n\n\n# Press Release 2: India-focused titles\n\n\nCode\nindia_weeks &lt;- COUNTRY_TOP_10 |&gt;\n  filter(country_name == \"India\") |&gt;\n  group_by(show_title, category) |&gt;\n  summarise(weeks_in_india = n_distinct(week), .groups = \"drop\") |&gt;\n  left_join(\n    COUNTRY_TOP_10 |&gt;\n      filter(country_name == \"United States\") |&gt;\n      distinct(show_title) |&gt;\n      mutate(charted_us = TRUE),\n    by = \"show_title\"\n  ) |&gt;\n  filter(is.na(charted_us)) |&gt;\n  arrange(desc(weeks_in_india)) |&gt;\n  slice_head(n = 3)\nindia_leads &lt;- paste0(india_weeks$show_title, collapse = \", \")\nindia_weeks_top3 &lt;- sum(india_weeks$weeks_in_india, na.rm = TRUE)\ncat(\n  \"Hindi Netflix shows are booming. Notably\", india_leads,\n  \"logged a combined\", india_weeks_top3,\n  \"chart-weeks in India while never charting in the USA.\\n\"\n)\n\n\nHindi Netflix shows are booming. Notably The Great Indian Kapil Show, The Railway Men - The Untold Story Of Bhopal 1984, Khakee: The Bihar Chapter logged a combined 104 chart-weeks in India while never charting in the USA.\n\n\nCode\n# Press Release 3: Open Topic\ncat(\"\\n# Press Release 3: Open Topic\\n\")\n\n\n\n# Press Release 3: Open Topic\n\n\nCode\ntotal_hours_recent_year &lt;- sum(top10_films_recent_year$total_hours)\ntop3_titles &lt;- paste0(rev(top10_films_recent_year$show_title)[1:3], collapse = \", \")\ncat(\n  \"Global Films Keep Winning — In\", most_recent_full_year,\n  \"the global top 10 films amassed\", comma(total_hours_recent_year),\n  \"hours viewed. Top shows included\", top3_titles,\n  \"each lasting weeks across regions.\\n\"\n)\n\n\nGlobal Films Keep Winning — In 2024 the global top 10 films amassed 1,948,000,000 hours viewed. Top shows included Carry-On, Society of the Snow, Rebel Ridge each lasting weeks across regions."
  }
]